[
["lofreq-threshold.html", "Section 5 Lofreq threshold", " Section 5 Lofreq threshold source(&quot;utils.R&quot;) orf_shapes = c(&quot;coding&quot; = 15, &quot;non-coding&quot; = 3) vcfToDataframe &lt;- function(vcf.files, contig_mapping = contig_mapping, gff.df = gff.df) { require(vcfR) res &lt;- list() for (file in vcf.files) { #message(file) library(data.table) vcf.content &lt;- vcfR::read.vcfR(file, verbose = FALSE) vcf.fix &lt;- as.data.frame(vcf.content@fix) # contains chr, position and substitution informations vcf.info &lt;- vcfR::INFO2df(vcf.content) # get INFO field, contains DP, AF informations if(nrow(vcf.fix) &gt; 0) { # there are variants dat &lt;- as.data.frame(cbind(vcf.fix[,c(1, 2, 4, 5, 6)], vcf.info[,c(1, 2)])) dat$majorAF &lt;- sapply(dat$AF, minorAfToMajorAf) # transforms e.g. AF of 0.1 to 0.9, 0.9 stays 0.9 and 0.5 stays 0.5 dat$genome &lt;- contig_mapping[match(dat$CHROM, contig_mapping$contig),]$genome # map chr information to genome name e.g. NHMU01000001.1 -&gt; i48 dat$genome_hr &lt;- translateGenomeIdToFullName(tolower(dat$genome)) dat$dp &lt;- as.numeric(as.matrix(vcf.info$DP)) dat$sample &lt;- tools::file_path_sans_ext(basename(file)) res[[tools::file_path_sans_ext(basename(file))]] &lt;- dat # add vcf df to list } else{ message(&quot;Skipping&quot;) } } df &lt;- as.data.frame(do.call(rbind, res)) # merge list to df return(df) } gff.files &lt;- Sys.glob(&quot;data/references/gff/*.gff&quot;) gff.df &lt;- NULL for (gff.file in gff.files){ message(gff.file) gff &lt;- rtracklayer::readGFF(gff.file) # subset since different columns are present on gff files relevant &lt;- data.frame(start = gff$start, end = gff$end, type = as.character(as.matrix(gff$type)), gene = as.character(as.matrix(gff$gene)), product = as.character(as.matrix(gff$product)), chr = as.character(as.matrix(gff$seqid))) relevant$genome &lt;- substr(basename(gff.file), 1, nchar(basename(gff.file))-4) gff.df &lt;- rbind(gff.df, relevant) } ## data/references/gff/I46.gff ## data/references/gff/KB1.gff ## data/references/gff/YL58.gff contig_mapping &lt;- read.csv2(&quot;data/contig_mapping_new_ref.csv&quot;, sep =&quot;;&quot;, header=T, stringsAsFactors = F) # this file contains contig names of the 12 OligoMM genomes vcf.files &lt;- Sys.glob(&quot;lofreq_threshold/*.vcf&quot;) vcf.samples &lt;- suppressWarnings(vcfToDataframe(vcf.files, contig_mapping, gff.df = gff.df)) p &lt;- ggplot(vcf.samples, aes(AF, fill = sample)) + geom_histogram() p &lt;- p + facet_grid(sample ~ .) p &lt;- p + theme_classic() + xlab(&quot;AF&quot;) + ylab(&quot;occurence&quot;) plotly::ggplotly(p) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. "]
]
