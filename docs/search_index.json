[
["ab-effects-metagenomes.html", "Section 4 AB-effects (metagenomes) 4.1 Load in variants 4.2 AF frequency 4.3 number of variants per samples 4.4 Heatmap 4.5 Focus on mouse where we have many time points 4.6 Akkermansia Muciniphila", " Section 4 AB-effects (metagenomes) 4.1 Load in variants vcfToDataframe &lt;- function(vcf.files, contig_mapping = contig_mapping, gff.df = gff.df) { require(vcfR) res &lt;- list() for (file in vcf.files) { library(data.table) vcf.content &lt;- vcfR::read.vcfR(file, verbose = FALSE) vcf.fix &lt;- as.data.frame(vcf.content@fix) # contains chr, position and substitution informations vcf.info &lt;- vcfR::INFO2df(vcf.content) # get INFO field, contains DP, AF informations if(nrow(vcf.fix) &gt; 0) { # there are variants dat &lt;- as.data.frame(cbind(vcf.fix[,c(1, 2, 4, 5, 6)], vcf.info[,c(1, 2)])) dat$majorAF &lt;- sapply(dat$AF, minorAfToMajorAf) # transforms e.g. AF of 0.1 to 0.9, 0.9 stays 0.9 and 0.5 stays 0.5 dat$genome &lt;- contig_mapping[match(dat$CHROM, contig_mapping$contig),]$genome # map chr information to genome name e.g. NHMU01000001.1 -&gt; i48 dat$genome_hr &lt;- translateGenomeIdToFullName(tolower(dat$genome)) dat$mouse.id &lt;- substr(tools::file_path_sans_ext(basename(file)), 1, 4) dat$mouse.group &lt;- translateMouseIdToTreatmentGroup(dat$mouse.id) dat$day &lt;- as.integer(substr(basename(file), 6, 7)) dat$phase &lt;- binDaysByPhase(as.numeric(as.matrix(dat$day))) dat$phase_num &lt;- binDaysByPhaseGroup(dat$day) dat$dp &lt;- as.numeric(as.matrix(vcf.info$DP)) # annotate overlay of gene dt.gff &lt;- data.table(start = gff.df$start, end = gff.df$end, chr = as.character(as.matrix(gff.df$chr)), feature = gff.df$product) colnames(dat)[1:2] &lt;- c(&quot;chr&quot;, &quot;start&quot;) dat$start &lt;- as.integer(as.matrix(dat$start)) dat$chr &lt;- as.character(as.matrix(dat$chr)) dat$end &lt;- dat$start dat2 &lt;- as.data.table(dat) setkey(dt.gff, chr, start, end) annotated &lt;- foverlaps(dat2, dt.gff, type=&quot;within&quot;, mult=&quot;first&quot;) res[[tools::file_path_sans_ext(basename(file))]] &lt;- annotated # add vcf df to list } else{ message(&quot;Skipping&quot;) } } df &lt;- as.data.frame(do.call(rbind, res)) # merge list to df return(df) } # load in reference information gff.files &lt;- Sys.glob(&quot;data/references/joined_reference_curated_ecoli/*.gff&quot;) gff.df &lt;- NULL for (gff.file in gff.files){ message(gff.file) gff &lt;- rtracklayer::readGFF(gff.file) # subset since different columns are present on gff files relevant &lt;- data.frame(start = gff$start, end = gff$end, type = as.character(as.matrix(gff$type)), gene = as.character(as.matrix(gff$gene)), product = as.character(as.matrix(gff$product)), chr = as.character(as.matrix(gff$seqid))) relevant$genome &lt;- substr(basename(gff.file), 1, nchar(basename(gff.file))-4) gff.df &lt;- rbind(gff.df, relevant) } ## data/references/joined_reference_curated_ecoli/joined_reference_curated_ecoli.gff # load in contig information contig_mapping &lt;- read.csv2(&quot;data/contig_mapping_new_ref.csv&quot;, sep =&quot;;&quot;, header=T, stringsAsFactors = F) # this file contains contig names of the 12 OligoMM genomes # load in vcf files vcf.files &lt;- Sys.glob(&quot;out_philipp/all_vcf/*.vcf&quot;) vcf.samples &lt;- suppressWarnings(vcfToDataframe(vcf.files, contig_mapping, gff.df = gff.df)) ## Skipping vcf.samples$feature &lt;- as.character(as.matrix(vcf.samples$feature)) vcf.samples[which(is.na(vcf.samples$feature)),]$feature &lt;- &quot;outside ORFs&quot; vcf.samples $start &lt;- NULL vcf.samples $end &lt;- NULL vcf.samples $i.end &lt;- NULL colnames(vcf.samples)[3] &lt;- &quot;POS&quot; saveRDS(vcf.samples, file = &quot;data/rds/omm_ab.rds&quot;) 4.2 AF frequency p &lt;- ggplot(vcf.samples, aes(AF, fill = genome)) + geom_histogram() p &lt;- p + facet_grid(mouse.id + mouse.group ~ genome + genome_hr) p &lt;- p + theme_classic() + xlab(&quot;AF&quot;) + ylab(&quot;occurence&quot;) print(p) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. Figure 4.1: AF of resequenced strains p &lt;- ggplot(vcf.samples, aes(majorAF, fill = genome)) + geom_histogram() p &lt;- p + facet_grid(mouse.id + mouse.group ~ genome + genome_hr) p &lt;- p + theme_classic() + xlab(&quot;AF&quot;) + ylab(&quot;occurence&quot;) print(p) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. Figure 4.2: major AF of resequenced strains 4.3 number of variants per samples dat &lt;- readRDS(&quot;data/rds/omm_ab.rds&quot;) dat$dummy &lt;- 1 dat.agg &lt;- aggregate(dummy ~ mouse.id + mouse.group + day + phase, dat, sum) DT::datatable(dat.agg) 4.3.1 number of variants per treatment group p &lt;- ggplot(dat.agg, aes(x = mouse.id, y = dummy, color = day)) p &lt;- p + geom_jitter(shape = 4) + facet_grid(. ~ mouse.group, scales = &quot;free_x&quot;) p &lt;- p + geom_boxplot() + theme_classic() + xlab(&quot;Mouse ID&quot;) + ylab(&quot;number of variants&quot;) plotly::ggplotly(p) Figure 4.3: number of variants of all 12 OMM genomes by mouse 4.4 Heatmap All mice dat &lt;- readRDS(&quot;data/rds/omm_ab.rds&quot;) dat$sample.id &lt;- paste0(dat$mouse.id, &quot;-&quot;,dat$day) dat$variant.id &lt;- paste0(dat$POS, &quot;-&quot;, dat$REF, &quot;-&quot;, dat$ALT) data.wide &lt;- dcast(dat, variant.id ~ sample.id, value.var = &quot;AF&quot;) ## Warning in dcast(dat, variant.id ~ sample.id, value.var = &quot;AF&quot;): The dcast generic in data.table has been passed a data.frame and will attempt to ## redirect to the reshape2::dcast; please note that reshape2 is deprecated, and this redirection is now deprecated as well. Please do this redirection ## yourself like reshape2::dcast(dat). In the next version, this warning will become an error. data.wide[is.na(data.wide)] &lt;- 0 rownames(data.wide) &lt;- data.wide$variant.id data.wide$variant.id &lt;- NULL library(circlize) library(ComplexHeatmap) heat &lt;- data.matrix(data.wide) # limit to variants that are present in at least 10% of samples heat_num &lt;- rowSums(heat != 0) heat2 &lt;- heat[which(heat_num &gt; ncol(heat)/10),] # limit to variants that have a high variance heat_var_num &lt;- matrixStats::rowVars(heat2) heat3 &lt;- heat2[which(heat_var_num &gt; quantile(heat_var_num, 0.5)) ,] dat$dummy &lt;- 1 annot.data &lt;- aggregate(dummy ~ mouse.id + mouse.group + day + phase, dat, sum) annot.data$sample.id &lt;- paste0(annot.data$mouse.id, &quot;-&quot;,annot.data$day) heat3.mouse.id &lt;- annot.data[match(colnames(heat3), annot.data$sample.id),]$mouse.id heat3.day &lt;- annot.data[match(colnames(heat3), annot.data$sample.id),]$day heat3.mouse.group &lt;- annot.data[match(colnames(heat3), annot.data$sample.id),]$mouse.group heat3.phase &lt;- annot.data[match(colnames(heat3), annot.data$sample.id),]$phase heat3.phase2 &lt;- ifelse(heat3.phase == &quot;post-treatment&quot;, 6, NA) ord = data.frame(day = heat3.day, mouse.id =heat3.mouse.id ) occ = as.data.frame(table(heat3.mouse.id)) ord$occ &lt;- occ[match(ord$mouse.id, occ$heat3.mouse.id),]$Freq data.wide.sub &lt;- dat[match(colnames(heat3), dat$sample.id),] col_fun = colorRamp2(c(0, 0.5, 1), c(&quot;white&quot;, &quot;yellow&quot;, &quot;red&quot;)) qpcr &lt;- read.table(&quot;qpcr.csv&quot;, header = T, sep = &quot;;&quot;) qpcr$universal &lt;- NULL rownames(qpcr) &lt;- paste0(qpcr$mouse, &quot;-&quot;,qpcr$day) qpcr &lt;- qpcr[,-c(1:5)] qpcr &lt;- apply(qpcr, 1, function(x) x/sum(x)) qpcr &lt;- qpcr[,which(colnames(qpcr) %in% colnames(heat3))] qpcr &lt;- qpcr[,match(colnames(heat3), colnames(qpcr))] #pdf(&quot;heat.pdf&quot;, width= 10, height = 10) Heatmap(heat3, name = &quot;AF&quot;, col = col_fun, border = TRUE, top_annotation = HeatmapAnnotation(num = anno_lines(colSums(heat3), smooth = TRUE,border = TRUE), ra = anno_barplot(t(qpcr), bar_width = 1,gp = gpar(fill = 1:12), height = unit(3, &quot;cm&quot;)), mouse = heat3.mouse.id, group = heat3.mouse.group, phase = heat3.phase, day=anno_simple(heat3.day, pch =heat3.phase2)), cluster_columns =F, column_order = order(ord$occ, ord$mouse.id, ord$day), right_annotation = rowAnnotation(prev = anno_barplot(rowSums(heat3))), row_gap = unit(0, &quot;mm&quot;), column_gap = unit(0, &quot;mm&quot;), column_split = heat3.mouse.group, column_names_gp = gpar(fontsize =5), row_names_gp = gpar(fontsize = 3), show_row_dend = F, show_row_names = F, show_column_dend = F ) #dev.off() All mice clustered dat &lt;- readRDS(&quot;data/rds/omm_ab.rds&quot;) dat$sample.id &lt;- paste0(dat$mouse.id, &quot;-&quot;,dat$day) dat$variant.id &lt;- paste0(dat$POS, &quot;-&quot;, dat$REF, &quot;-&quot;, dat$ALT) data.wide &lt;- dcast(dat, variant.id ~ sample.id, value.var = &quot;AF&quot;) ## Warning in dcast(dat, variant.id ~ sample.id, value.var = &quot;AF&quot;): The dcast generic in data.table has been passed a data.frame and will attempt to ## redirect to the reshape2::dcast; please note that reshape2 is deprecated, and this redirection is now deprecated as well. Please do this redirection ## yourself like reshape2::dcast(dat). In the next version, this warning will become an error. data.wide[is.na(data.wide)] &lt;- 0 rownames(data.wide) &lt;- data.wide$variant.id data.wide$variant.id &lt;- NULL library(circlize) library(ComplexHeatmap) heat &lt;- data.matrix(data.wide) # limit to variants that are present in at least 10% of samples heat_num &lt;- rowSums(heat != 0) heat2 &lt;- heat[which(heat_num &gt; ncol(heat)/10),] # limit to variants that have a high variance heat_var_num &lt;- matrixStats::rowVars(heat2) heat3 &lt;- heat2[which(heat_var_num &gt; quantile(heat_var_num, 0.5)) ,] dat$dummy &lt;- 1 annot.data &lt;- aggregate(dummy ~ mouse.id + mouse.group + day + phase, dat, sum) annot.data$sample.id &lt;- paste0(annot.data$mouse.id, &quot;-&quot;,annot.data$day) heat3.mouse.id &lt;- annot.data[match(colnames(heat3), annot.data$sample.id),]$mouse.id heat3.day &lt;- annot.data[match(colnames(heat3), annot.data$sample.id),]$day heat3.mouse.group &lt;- annot.data[match(colnames(heat3), annot.data$sample.id),]$mouse.group heat3.phase &lt;- annot.data[match(colnames(heat3), annot.data$sample.id),]$phase heat3.phase2 &lt;- ifelse(heat3.phase == &quot;post-treatment&quot;, 6, NA) ord = data.frame(day = heat3.day, mouse.id =heat3.mouse.id ) occ = as.data.frame(table(heat3.mouse.id)) ord$occ &lt;- occ[match(ord$mouse.id, occ$heat3.mouse.id),]$Freq data.wide.sub &lt;- dat[match(colnames(heat3), dat$sample.id),] col_fun = colorRamp2(c(0, 0.5, 1), c(&quot;white&quot;, &quot;yellow&quot;, &quot;red&quot;)) qpcr &lt;- read.table(&quot;qpcr.csv&quot;, header = T, sep = &quot;;&quot;) qpcr$universal &lt;- NULL rownames(qpcr) &lt;- paste0(qpcr$mouse, &quot;-&quot;,qpcr$day) qpcr &lt;- qpcr[,-c(1:5)] qpcr &lt;- apply(qpcr, 1, function(x) x/sum(x)) qpcr &lt;- qpcr[,which(colnames(qpcr) %in% colnames(heat3))] qpcr &lt;- qpcr[,match(colnames(heat3), colnames(qpcr))] #pdf(&quot;heat.pdf&quot;, width= 10, height = 10) Heatmap(heat3, name = &quot;AF&quot;, col = col_fun, border = TRUE, top_annotation = HeatmapAnnotation(num = anno_lines(colSums(heat3), smooth = TRUE,border = TRUE), ra = anno_barplot(t(qpcr), bar_width = 1,gp = gpar(fill = 1:12), height = unit(3, &quot;cm&quot;)), mouse = heat3.mouse.id, group = heat3.mouse.group, phase = heat3.phase, day=anno_simple(heat3.day, pch =heat3.phase2)), cluster_columns =T, right_annotation = rowAnnotation(prev = anno_barplot(rowSums(heat3))), row_gap = unit(0, &quot;mm&quot;), column_gap = unit(0, &quot;mm&quot;), column_names_gp = gpar(fontsize =5), row_names_gp = gpar(fontsize = 3), show_row_dend = F, show_row_names = F, show_column_dend = T ) #dev.off() dat &lt;- readRDS(&quot;data/rds/omm_ab.rds&quot;) dat$sample.id &lt;- paste0(dat$mouse.id, &quot;-&quot;,dat$day) dat$variant.id &lt;- paste0(dat$POS, &quot;-&quot;, dat$REF, &quot;-&quot;, dat$ALT) data.wide &lt;- dcast(dat, variant.id ~ sample.id, value.var = &quot;AF&quot;) ## Warning in dcast(dat, variant.id ~ sample.id, value.var = &quot;AF&quot;): The dcast generic in data.table has been passed a data.frame and will attempt to ## redirect to the reshape2::dcast; please note that reshape2 is deprecated, and this redirection is now deprecated as well. Please do this redirection ## yourself like reshape2::dcast(dat). In the next version, this warning will become an error. data.wide[is.na(data.wide)] &lt;- 0 rownames(data.wide) &lt;- data.wide$variant.id data.wide$variant.id &lt;- NULL library(circlize) library(ComplexHeatmap) heat &lt;- data.matrix(data.wide) # limit to variants that are present in at least 10% of samples heat_num &lt;- rowSums(heat != 0) heat2 &lt;- heat[which(heat_num &gt; ncol(heat)/10),] # limit to variants that have a high variance heat_var_num &lt;- matrixStats::rowVars(heat2) heat3 &lt;- heat2[which(heat_var_num &gt; quantile(heat_var_num, 0.5)) ,] dat$dummy &lt;- 1 annot.data &lt;- aggregate(dummy ~ mouse.id + mouse.group + day + phase, dat, sum) annot.data$sample.id &lt;- paste0(annot.data$mouse.id, &quot;-&quot;,annot.data$day) heat3.mouse.id &lt;- annot.data[match(colnames(heat3), annot.data$sample.id),]$mouse.id heat3.day &lt;- annot.data[match(colnames(heat3), annot.data$sample.id),]$day heat3.mouse.group &lt;- annot.data[match(colnames(heat3), annot.data$sample.id),]$mouse.group heat3.phase &lt;- annot.data[match(colnames(heat3), annot.data$sample.id),]$phase heat3.phase2 &lt;- ifelse(heat3.phase == &quot;post-treatment&quot;, 6, NA) ord = data.frame(day = heat3.day, mouse.id =heat3.mouse.id ) occ = as.data.frame(table(heat3.mouse.id)) ord$occ &lt;- occ[match(ord$mouse.id, occ$heat3.mouse.id),]$Freq data.wide.sub &lt;- dat[match(colnames(heat3), dat$sample.id),] col_fun = colorRamp2(c(0, 0.5, 1), c(&quot;white&quot;, &quot;yellow&quot;, &quot;red&quot;)) qpcr &lt;- read.table(&quot;qpcr.csv&quot;, header = T, sep = &quot;;&quot;) qpcr$universal &lt;- NULL rownames(qpcr) &lt;- paste0(qpcr$mouse, &quot;-&quot;,qpcr$day) qpcr &lt;- qpcr[,-c(1:5)] qpcr &lt;- t(qpcr) qpcr &lt;- qpcr[,which(colnames(qpcr) %in% colnames(heat3))] qpcr &lt;- qpcr[,match(colnames(heat3), colnames(qpcr))] #pdf(&quot;heat.pdf&quot;, width= 10, height = 10) Heatmap(heat3, name = &quot;AF&quot;, col = col_fun, border = TRUE, top_annotation = HeatmapAnnotation(num = anno_lines(colSums(heat3), smooth = TRUE,border = TRUE), ra = anno_barplot(t(qpcr), bar_width = 1,gp = gpar(fill = 1:12), height = unit(3, &quot;cm&quot;)), mouse = heat3.mouse.id, group = heat3.mouse.group, phase = heat3.phase, day=anno_simple(heat3.day, pch =heat3.phase2)), cluster_columns =T, right_annotation = rowAnnotation(prev = anno_barplot(rowSums(heat3))), row_gap = unit(0, &quot;mm&quot;), column_gap = unit(0, &quot;mm&quot;), column_names_gp = gpar(fontsize =5), row_names_gp = gpar(fontsize = 3), show_row_dend = F, show_row_names = F, show_column_dend = T ) #dev.off() 4.5 Focus on mouse where we have many time points dat &lt;- readRDS(&quot;data/rds/omm_ab.rds&quot;) dat$rep.group &lt;- translateMouseIdToReplicateGroup(dat$mouse.id) dat &lt;- dat[which(dat$rep.group == &quot;Full&quot;),] dat$sample.id &lt;- paste0(dat$mouse.id, &quot;-&quot;,dat$day) dat$variant.id &lt;- paste0(dat$POS, &quot;-&quot;, dat$REF, &quot;-&quot;, dat$ALT) data.wide &lt;- dcast(dat, variant.id ~ sample.id, value.var = &quot;AF&quot;) ## Warning in dcast(dat, variant.id ~ sample.id, value.var = &quot;AF&quot;): The dcast generic in data.table has been passed a data.frame and will attempt to ## redirect to the reshape2::dcast; please note that reshape2 is deprecated, and this redirection is now deprecated as well. Please do this redirection ## yourself like reshape2::dcast(dat). In the next version, this warning will become an error. data.wide[is.na(data.wide)] &lt;- 0 rownames(data.wide) &lt;- data.wide$variant.id data.wide$variant.id &lt;- NULL heat &lt;- data.matrix(data.wide) # limit to variants that are present in at least 10% of samples heat_num &lt;- rowSums(heat != 0) heat2 &lt;- heat[which(heat_num &gt; ncol(heat)/10),] # limit to variants that have a high variance heat_var_num &lt;- matrixStats::rowVars(heat2) heat3 &lt;- heat2[which(heat_var_num &gt; quantile(heat_var_num, 0.50)) ,] dat$dummy &lt;- 1 annot.data &lt;- aggregate(dummy ~ mouse.id + mouse.group + day + phase, dat, sum) annot.data$sample.id &lt;- paste0(annot.data$mouse.id, &quot;-&quot;,annot.data$day) heat3.mouse.id &lt;- annot.data[match(colnames(heat3), annot.data$sample.id),]$mouse.id heat3.day &lt;- annot.data[match(colnames(heat3), annot.data$sample.id),]$day ord = data.frame(day = heat3.day, mouse.id =heat3.mouse.id ) heat3.mouse.group &lt;- annot.data[match(colnames(heat3), annot.data$sample.id),]$mouse.group heat3.phase &lt;- annot.data[match(colnames(heat3), annot.data$sample.id),]$phase heat3.phase2 &lt;- ifelse(heat3.phase == &quot;post-treatment&quot;, 6, NA) col_fun = colorRamp2(c(0, 0.5, 1), c(&quot;white&quot;, &quot;yellow&quot;, &quot;red&quot;)) # order the heatmap by treatment group Heatmap(heat3, name = &quot;AF&quot;, col = col_fun, border = TRUE, top_annotation = HeatmapAnnotation(num = anno_lines(colSums(heat3), smooth = TRUE,border = TRUE), day=anno_simple(heat3.day, pch =heat3.phase2 )), cluster_columns =F, column_order = order(ord$mouse.id, ord$day), column_split = heat3.mouse.group, column_names_gp = gpar(fontsize =5), row_names_gp = gpar(fontsize = 8), show_row_dend = F, show_row_names = F, show_column_dend = F ) 4.6 Akkermansia Muciniphila 4.6.1 area plot 1 dat &lt;- readRDS(&quot;data/rds/omm_ab.rds&quot;) dat$variant.id &lt;- paste0(dat$POS, &quot;-&quot;,dat$REF, &quot;-&quot;, dat$ALT) dat &lt;- dat[which(dat$chr == &quot;Akkermansia_muciniphila&quot;),] data.wide &lt;- dcast(dat, day + mouse.id + mouse.group ~variant.id, value.var = &quot;AF&quot;) ## Warning in dcast(dat, day + mouse.id + mouse.group ~ variant.id, value.var = &quot;AF&quot;): The dcast generic in data.table has been passed a data.frame and ## will attempt to redirect to the reshape2::dcast; please note that reshape2 is deprecated, and this redirection is now deprecated as well. Please do ## this redirection yourself like reshape2::dcast(dat). In the next version, this warning will become an error. data.wide[is.na(data.wide)] &lt;- 0 colMax &lt;- function(X) apply(X, 2, max) dat_mat &lt;- data.wide[,-c(1:3)] # filter variants data.wide.reduced &lt;- cbind(data.wide[,c(1:3)],dat_mat[,which(colMax(dat_mat)&gt; 0.5)]) #data.wide.reduced &lt;- data.wide dat2 &lt;- melt(data.wide.reduced, id.vars = c(&quot;day&quot;,&quot;mouse.id&quot;, &quot;mouse.group&quot;)) ## Warning in melt(data.wide.reduced, id.vars = c(&quot;day&quot;, &quot;mouse.id&quot;, &quot;mouse.group&quot;)): The melt generic in data.table has been passed a data.frame ## and will attempt to redirect to the relevant reshape2 method; please note that reshape2 is deprecated, and this redirection is now deprecated ## as well. To continue using melt methods from reshape2 while both libraries are attached, e.g. melt.list, you can prepend the namespace like ## reshape2::melt(data.wide.reduced). In the next version, this warning will become an error. dat3 &lt;- dat2 %&gt;% group_by(day, mouse.id) %&gt;% mutate(Nor = value/sum(value)) set.seed(123) col_list &lt;- sort(unique(dat3$variable)) cols &lt;-randomcoloR::randomColor(length(unique(dat3$variable))) # Muller plot p &lt;- ggplot(dat3, aes(x = day, y = Nor, group = variable, fill=variable, label = )) p &lt;- p + geom_area(color = &quot;black&quot;, size = 0.1) p &lt;- p + facet_wrap(~ mouse.group + mouse.id, ncol=3) p &lt;- p + theme_minimal() + theme(legend.position = &quot;none&quot;) p &lt;- p + ylab(&quot;Fraction&quot;) p &lt;- p + scale_fill_manual(values= cols, breaks = col_list) p &lt;- p + geom_vline(xintercept = c(4, 18, 53, 67)) plotly::ggplotly(p) 4.6.2 line plot dat &lt;- readRDS(&quot;data/rds/omm_ab.rds&quot;) dat$variant.id &lt;- paste0(dat$POS, &quot;-&quot;,dat$REF, &quot;-&quot;, dat$ALT) dat &lt;- dat[which(dat$chr == &quot;Akkermansia_muciniphila&quot;),] data.wide &lt;- dcast(dat, day + mouse.id + mouse.group~variant.id, value.var = &quot;AF&quot;) ## Warning in dcast(dat, day + mouse.id + mouse.group ~ variant.id, value.var = &quot;AF&quot;): The dcast generic in data.table has been passed a data.frame and ## will attempt to redirect to the reshape2::dcast; please note that reshape2 is deprecated, and this redirection is now deprecated as well. Please do ## this redirection yourself like reshape2::dcast(dat). In the next version, this warning will become an error. data.wide[is.na(data.wide)] &lt;- 0 dat2 &lt;- melt(data.wide, id.vars = c(&quot;day&quot;,&quot;mouse.id&quot;, &quot;mouse.group&quot;)) ## Warning in melt(data.wide, id.vars = c(&quot;day&quot;, &quot;mouse.id&quot;, &quot;mouse.group&quot;)): The melt generic in data.table has been passed a data.frame and ## will attempt to redirect to the relevant reshape2 method; please note that reshape2 is deprecated, and this redirection is now deprecated ## as well. To continue using melt methods from reshape2 while both libraries are attached, e.g. melt.list, you can prepend the namespace like ## reshape2::melt(data.wide). In the next version, this warning will become an error. set.seed(123) col_list &lt;- sort(unique(dat3$variable)) cols &lt;-randomcoloR::randomColor(length(unique(dat3$variable))) p &lt;- ggplot(dat2, aes(x = day, y =value)) p &lt;- p + geom_line(aes(group = variable), alpha= 0.2) p &lt;- p + theme_minimal() p &lt;- p + facet_wrap(~mouse.group + mouse.id, ncol=3) p &lt;- p + geom_vline(xintercept = c(4, 18, 53, 67)) plotly::ggplotly(p) "]
]
