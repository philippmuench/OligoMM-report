[
["claudia-samples.html", "Section 2 Claudia Samples 2.1 Experiment 2.2 Metadata 2.3 OligoMM 2.4 Load in variants 2.5 AF frequency 2.6 number of variants per group", " Section 2 Claudia Samples 2.1 Experiment 2.2 Metadata designdf &lt;- read.table(&quot;data/sample_mapping.tsv&quot;, header = T, sep = &quot;\\t&quot;) DT::datatable(designdf) 2.3 OligoMM ID phylum species YL44 Verrucomicrobia A. muciniphila I48 Bacteroidetes B. caecimuris YL27 Bacteroidetes M. intestinale YL45 Proteobacteria T. muris YL2 Actinobacteria B. longum KB1 Firmicutes E. faecalis KB18 Firmicutes A. muris YL32 Firmicutes C. clostridioforme YL31 Firmicutes F. plautii YL58 Firmicutes B. coccoides I49 Firmicutes L. reuteri I46 Firmicutes C. innocuum 2.4 Load in variants require(data.table) source(&quot;utils.R&quot;) vcftodataframe &lt;- function(vcf_files, contig_mapping = contig_mapping, gff_df = gff_df) { require(vcfR) res &lt;- list() for (file in vcf_files) { # message(file) vcf_content &lt;- vcfR::read.vcfR(file, verbose = FALSE) vcf_fix &lt;- as.data.frame(vcf_content@fix) vcf_info &lt;- vcfR::INFO2df(vcf_content) # contains DP and AF info if (nrow(vcf_fix) &gt; 0) { # there are variants dat &lt;- as.data.frame(cbind(vcf_fix[,c(1, 2, 4, 5, 6)], vcf_info[,c(1, 2)])) dat$majorAF &lt;- sapply(dat$AF, minorAfToMajorAf) dat$dp &lt;- as.numeric(as.matrix(vcf_info$DP)) dat$genome &lt;- contig_mapping[match(dat$CHROM, contig_mapping$contig),]$genome dat$genome_hr &lt;- translateGenomeIdToFullName(tolower(dat$genome)) dat$mouse.id &lt;- substr(tools::file_path_sans_ext(basename(file)), 1, 4) # add studz type specific annotations dat$mouse.group &lt;- designdf[match(dat$mouse.id, designdf$mouse.id),]$desc dat$day &lt;- designdf[match(dat$mouse.id, designdf$mouse.id),]$day dat$generation &lt;- designdf[match(dat$mouse.id, designdf$mouse.id),]$generation dat$ecoli &lt;- designdf[match(dat$mouse.id, designdf$mouse.id),]$ecoli dat$sample &lt;- tools::file_path_sans_ext(basename(file)) # annotate overlay of gene dt_gff &lt;- data.table(start = gff_df$start, end = gff_df$end, chr = as.character(as.matrix(gff_df$chr)), feature = gff_df$product) colnames(dat)[1:2] &lt;- c(&quot;chr&quot;, &quot;start&quot;) dat$start &lt;- as.integer(as.matrix(dat$start)) dat$chr &lt;- as.character(as.matrix(dat$chr)) dat$end &lt;- dat$start dat2 &lt;- as.data.table(dat) setkey(dt_gff, chr, start, end) annotated &lt;- foverlaps(dat2, dt_gff, type=&quot;within&quot;, mult=&quot;first&quot;) res[[tools::file_path_sans_ext(basename(file))]] &lt;- annotated # add vcf df to list } else{ message(&quot;Skipping&quot;) } } df &lt;- as.data.frame(do.call(rbind, res)) # merge list to df return(df) } Merge vcf and annotate with metadata # load in reference information gff_files &lt;- Sys.glob(&quot;data/references/joined_reference_curated_ecoli/*.gff&quot;) gff_df &lt;- NULL for (gff_file in gff_files){ message(gff_file) gff &lt;- rtracklayer::readGFF(gff_file) # subset since different columns are present on gff files relevant &lt;- data.frame(start = gff$start, end = gff$end, type = as.character(as.matrix(gff$type)), gene = as.character(as.matrix(gff$gene)), product = as.character(as.matrix(gff$product)), chr = as.character(as.matrix(gff$seqid))) relevant$genome &lt;- substr(basename(gff_file), 1, nchar(basename(gff_file)) - 4) gff_df &lt;- rbind(gff_df, relevant) } ## data/references/joined_reference_curated_ecoli/joined_reference_curated_ecoli.gff # load in contig information contig_mapping &lt;- read.csv2(&quot;data/contig_mapping_new_ref.csv&quot;, sep =&quot;;&quot;, header=T, stringsAsFactors = F) # load in vcf files vcf_files &lt;- Sys.glob(&quot;out_claudia/all_vcf/*.vcf&quot;) vcf_samples &lt;- suppressWarnings(vcftodataframe(vcf_files, contig_mapping, gff_df = gff_df)) vcf_samples$feature &lt;- as.character(as.matrix(vcf_samples$feature)) vcf_samples[which(is.na(vcf_samples$feature)),]$feature &lt;- &quot;outside ORFs&quot; vcf_samples $start &lt;- NULL vcf_samples $end &lt;- NULL vcf_samples $i.end &lt;- NULL colnames(vcf_samples)[3] &lt;- &quot;POS&quot; vcf_samples$ref_size &lt;- nchar(as.character(as.matrix(vcf_samples$REF))) vcf_samples$alt_size &lt;- nchar(as.character(as.matrix(vcf_samples$ALT))) vcf_samples$alteration &lt;- paste(as.character(vcf_samples$REF), &quot;-&gt;&quot;,as.character(vcf_samples$ALT)) vcf_samples$alteration_type &lt;- &quot;SNP&quot; vcf_samples[which(vcf_samples$ref_size &lt; vcf_samples$alt_size), ]$alteration_type &lt;- &quot;insertion&quot; vcf_samples[which(vcf_samples$ref_size &gt; vcf_samples$alt_size), ]$alteration_type &lt;- &quot;deletion&quot; saveRDS(vcf_samples, file = &quot;data/rds/omm_claudia_new.rds&quot;) 2.5 AF frequency dat &lt;- readRDS(&quot;data/rds/omm_claudia_new.rds&quot;) library(scales) p &lt;- ggplot(dat, aes(AF, fill = mouse.group)) + geom_histogram() p &lt;- p + facet_wrap(~ genome + genome_hr, scales= &quot;free&quot;, ncol = 3) p &lt;- p + xlab(&quot;AF&quot;) + ylab(&quot;occurence&quot;) + theme_minimal() plotly::ggplotly(p) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. Figure 2.1: AF of resequenced strains #p &lt;- p + scale_x_continuous(breaks=c(0,.1,.2,.3,.4,.5,1), trans=&quot;log1p&quot;, expand=c(0,0)) + dat &lt;- readRDS(&quot;data/rds/omm_claudia_new.rds&quot;) p &lt;- ggplot(dat, aes(majorAF, fill = mouse.group)) + geom_histogram() p &lt;- p + theme_minimal() p &lt;- p + facet_wrap(~ genome+ genome_hr, scales= &quot;free&quot;, ncol = 3) p &lt;- p + xlab(&quot;AF&quot;) + ylab(&quot;occurence&quot;) plotly::ggplotly(p) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. Figure 2.2: major AF of resequenced strains 2.6 number of variants per group dat &lt;- readRDS(&quot;data/rds/omm_claudia_new.rds&quot;) dat$variants &lt;- 1 dat.agg &lt;- aggregate(variants ~ mouse.id + alteration_type + genome_hr, dat, sum) DT::datatable(dat.agg) 2.6.1 number of variants per treatment group dat &lt;- readRDS(&quot;data/rds/omm_claudia_new.rds&quot;) dat$variants &lt;- 1 dat.agg &lt;- aggregate(variants ~ mouse.id + mouse.group + alteration_type+ genome_hr, dat, sum) p &lt;- ggplot(dat.agg, aes(x = reorder(mouse.id, -variants) , y = variants, color = mouse.group, shape = alteration_type)) p &lt;- p + geom_jitter(shape = 4) + facet_grid(genome_hr ~., scales = &quot;free_x&quot;) p &lt;- p + scale_y_log10() + theme_minimal() + ylab(&quot;number variants&quot;) p &lt;- p + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) plotly::ggplotly(p) Figure 2.3: number of variants of all 12 OMM genomes by mouse "]
]
